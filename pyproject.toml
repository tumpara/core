[tool.poetry]
name = "tumpara"
version = "0.1.0"
description = "Self-hosted solution for managing home media libraries."
authors = ["Yannik RÃ¶del <hey@yannik.info>"]
license = "AGPLv3"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = ["--migrations", "--reuse-db", "--create-db"]
DJANGO_SETTINGS_MODULE = "tests.settings"

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
	"manage.py",
	"setup.py",
	"tumpara/__main__.py",
	"tumpara/wsgi.py",
	"tumpara/*/management/commands/*.py",
	"tumpara/*/migrations/*.py",
	"tumpara/settings/production.py",
	"tumpara/storage/scanner/worker.py",
	"tests/*",
]
exclude_lines = [
	"pragma: no cover",
	"def __repr__",
	"raise AssertionError",
	"raise NotImplementedError",
	"self\\.fail",
	"if __name__ == .__main__.:",
	"if TYPE_CHECKING:",
	# This is used with @overload a few times:
	"^\\s+\\.\\.\\.$",
]

[tool.black]
line-length = 88
target-version = ["py310"]
extend-exclude = "((tests|tumpara)/.*/migrations/.*\\.py)"

[tool.isort]
profile = "black"
skip_glob = ["tests/**/migrations/*.py", "tumpara/**/migrations/*.py"]

[tool.pylint.MASTER]
jobs = 0
ignore = "migrations"
load-plugins = ["pylint_django"]

[tool.pylint."MESSAGES CONTROL"]
disable = [
	"import-outside-toplevel",
#	"missing-function-docstring",
	"missing-class-docstring",
	"missing-module-docstring",
	"too-few-public-methods",
	"wrong-import-order",  # isort already does this.
	"no-else-continue",
	"no-else-raise",
	"no-else-return",
	"too-many-locals",
	"too-many-nested-blocks",
]

