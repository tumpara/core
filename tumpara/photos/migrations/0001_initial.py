# Generated by Django 4.0.4 on 2022-05-22 06:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gallery', '0002_album_alter_note_options_albumitem_album_assets'),
    ]

    operations = [
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('gallery_asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(class)s_instance', related_query_name='%(class)s_instance', serialize=False, to='gallery.galleryasset', verbose_name='gallery asset reference')),
                ('metadata_checksum', models.BinaryField(db_index=True, default=None, help_text="Hash value of the image's metadata. This is used to attribute multiple variations of the same photo to a single asset.", max_length=32, null=True, verbose_name='metadata checksum')),
                ('width', models.PositiveIntegerField(verbose_name='width')),
                ('height', models.PositiveIntegerField(verbose_name='height')),
                ('camera_make', models.CharField(blank=True, max_length=50, verbose_name='camera maker')),
                ('camera_model', models.CharField(blank=True, max_length=50, verbose_name='camera model')),
                ('iso_value', models.PositiveIntegerField(null=True, verbose_name='ISO sensitivity value')),
                ('exposure_time', models.DecimalField(decimal_places=4, help_text="The shot's exposure time, in seconds.", max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0001), django.core.validators.MaxValueValidator(9999)], verbose_name='exposure time')),
                ('aperture_size', models.DecimalField(decimal_places=1, help_text='Aperture / F-Stop value of the shot, in inverse. A value of 4 in this field implies an f-value of f/4.', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='aperture size')),
                ('focal_length', models.FloatField(help_text='Focal length of the camera, in millimeters.', null=True, verbose_name='focal length')),
                ('blurhash', models.CharField(help_text='Blurhash textual representation that can be used for loading placeholders.', max_length=100, null=True, verbose_name='blurhash')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photos',
            },
            bases=('gallery.galleryasset',),
        ),
    ]
