# Generated by Django 4.0.3 on 2022-05-14 14:42

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('libraries', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GalleryAsset',
            fields=[
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(class)s_instance', related_query_name='%(class)s_instance', serialize=False, to='libraries.asset', verbose_name='asset reference')),
                ('media_timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text="Timestamp associated with the asset's medium. For assets without a media file, this should be the creation date.", verbose_name='media timestamp')),
                ('media_location', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Real-world location associated with this entry.', null=True, srid=4326, verbose_name='media location')),
                ('stack_key', models.PositiveIntegerField(blank=True, default=None, help_text='Identifier that is the same for all entries on a stack.', null=True, verbose_name='stack key')),
                ('stack_representative', models.BooleanField(default=False, help_text="Designates whether this asset is its stack's representative. It will be shown as the cover element when the stack is rendered.", verbose_name='stack representative status')),
            ],
            options={
                'verbose_name': 'gallery asset',
                'verbose_name_plural': 'gallery assets',
                'db_table': 'gallery_asset',
                'ordering': ('media_timestamp',),
                'get_latest_by': 'media_timestamp',
            },
            bases=('libraries.asset',),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('gallery_asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='%(class)s_instance', related_query_name='%(class)s_instance', serialize=False, to='gallery.galleryasset', verbose_name='gallery asset reference')),
                ('content', models.TextField(help_text='Content of the note, which should be rendered using the markdown syntax.', verbose_name='note content')),
            ],
            options={
                'abstract': False,
            },
            bases=('gallery.galleryasset',),
        ),
        migrations.AddIndex(
            model_name='galleryasset',
            index=models.Index(fields=['media_timestamp', 'asset'], name='timestamp_filtering'),
        ),
        migrations.AddIndex(
            model_name='galleryasset',
            index=models.Index(fields=['media_location', 'asset'], name='location_filtering'),
        ),
        migrations.AddConstraint(
            model_name='galleryasset',
            constraint=models.UniqueConstraint(condition=models.Q(('stack_representative', True)), fields=('stack_key', 'stack_representative'), name='unique_representative_per_stack'),
        ),
        migrations.AddConstraint(
            model_name='galleryasset',
            constraint=models.CheckConstraint(check=models.Q(('stack_key__isnull', False), ('stack_representative', False), _connector='OR'), name='not_a_representative_when_unstacked'),
        ),
    ]
